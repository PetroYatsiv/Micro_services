next command to prepare project in vs code:
---check the .net version:
dotnet --version

---Create new web API project with name ''PlatformService'':
dotnet new webapi -n PlatformService

--open project in vscode:
code -r PlatformService

---next packages setups:
dotnet add package Microsoft.EntityFrameworkCore
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.InMemory
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection

--build docker image
docker build -t petroyatsiv/platformservice .
docker build -t petroyatsiv/commandservice .

--run
docker run -p 8080:80 -d petroyatsiv/platformservice

--get containers (319c3a36118c - CONTAINER ID)
docker ps

--stop docker container
docker stop 319c3a36118c

--start docker container by CONTAINER ID
docker start e7bcc9c3ff00

--kubernetes version
kubectl version

--apply 
kubectl apply -f platforms-depl.yaml

--get deployments
kubectl get deployments

--get pods
kubectl get pods

--delete deployments by "platforms-depl" yaml file.
kubectl delete deployment platforms-depl

--apply node port service
kubectl apply -f platforms-np-srv.yaml

--get services to see
kubectl get services

--restart with the latest docker image 
kubectl rollout restart deployment platforms-depl

--get kubernetes namespace
kubectl get namespace

--get pods by namespace
kubectl get pods --namespace=ingress-nginx

--get services by namespace
kubectl get services --namespace=ingress-nginx

--get services by all namespaces
kubectl get services --all-namespaces -o wide













